/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inter;

import Client.Client;
import Client.ClientHandler;
import Client.ClientServer;
import RSA.rsaAlgorithm;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author tvdsu
 */
public class ClientInterface extends javax.swing.JFrame {
    private static final int SERVERPORT = 4999;
    private static final String SERVER_IP = "localhost";
    public static String username = "none";
    public static String insideText = "none";
    static String inputInter = "none";
    public static rsaAlgorithm rsa = new rsaAlgorithm();
    static String inputKeyboard;
 
       
    /**
     * Creates new form ClientInterface
     */
    public ClientInterface() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/imagen/strawberry.png")).getImage());
        setTitle("Strawberry Messenger");
        setResizable(false);
        jTextArea1.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        JContinuar = new javax.swing.JButton();
        text_User = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        text_getUserText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 51, 51));
        jPanel1.setLayout(new java.awt.CardLayout());

        jPanel3.setBackground(new java.awt.Color(255, 51, 51));

        jLabel1.setFont(new java.awt.Font("Anton", 0, 60)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("STRAWBERRY");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("MESSENGER");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("INGRESE NOMBRE DE USUARIO:");

        JContinuar.setBackground(new java.awt.Color(0, 0, 0));
        JContinuar.setFont(new java.awt.Font("Anton", 0, 18)); // NOI18N
        JContinuar.setForeground(new java.awt.Color(255, 255, 255));
        JContinuar.setText("CONTINUAR");
        JContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JContinuarActionPerformed(evt);
            }
        });

        text_User.setFont(new java.awt.Font("Anton", 0, 14)); // NOI18N
        text_User.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                text_UserKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(214, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(JContinuar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_User, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(211, 211, 211))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(34, 34, 34)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(text_User, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(JContinuar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, "card3");

        jPanel2.setBackground(new java.awt.Color(255, 51, 51));

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        text_getUserText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                text_getUserTextKeyPressed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Anton", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("ENVIAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(text_getUserText, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(text_getUserText))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, "card2");

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JContinuarActionPerformed
        username = text_User.getText();
        CardLayout cd = (CardLayout) (jPanel1.getLayout());
        cd.show(jPanel1, "card2");
    }//GEN-LAST:event_JContinuarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        inputInter = text_getUserText.getText();
        text_getUserText.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void text_getUserTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_getUserTextKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            inputInter = text_getUserText.getText();
            text_getUserText.setText("");
        }
    }//GEN-LAST:event_text_getUserTextKeyPressed

    private void text_UserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_UserKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            username = text_User.getText();
            CardLayout cd = (CardLayout) (jPanel1.getLayout());
            cd.show(jPanel1, "card2");
        }
    }//GEN-LAST:event_text_UserKeyPressed
    
    public static void SetTextArea(String response){
        String txt = jTextArea1.getText();
        if(response == null){
            jTextArea1.setText(txt + username + ":" + inputKeyboard + "\n");
        }else{
            jTextArea1.setText(txt + username + ":" + response + "\n");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException, InterruptedException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientInterface().setVisible(true);
            }
        });
        
        //Declaración de variables.
        Socket socketClient;
        ClientServer clientServer; 
        Scanner sc;
        PrintWriter pw;
        InputStreamReader inputKey;
        BufferedReader buffKeyboard;
        String nombreUsuario=null;
        String cipherText;
        String publicKey;
                
        //Crea el socket para establecer la comunicación
        socketClient = new Socket(SERVER_IP, SERVERPORT);
        
        //para leer lo que mande el server
        InputStreamReader inputClient = new InputStreamReader(socketClient.getInputStream());;
        BufferedReader bufferClient = new BufferedReader(inputClient);
        
        System.out.println("Ingresa nombre de usuario");
 
        //establece la clase, en donde se lee lo que manda el servidor
        clientServer = new ClientServer(socketClient, rsa);      

        //Por parte del cliente
        inputKey = new InputStreamReader(System.in);
        buffKeyboard = new BufferedReader(inputKey);

        //para enviar el mensaje
        pw = new PrintWriter(socketClient.getOutputStream());
         
        do{
            Thread.sleep(200);
        }while(username == "none");
        
        //envía el nombre de usuario al servidor
        pw.println(username);
        pw.flush();
        
        System.out.println("LISTO!");
        
        System.out.println("Enviando llave");
        pw.println(rsa.getPublicKey());
        pw.flush();
        System.out.println("Listo");
        
        publicKey = bufferClient.readLine();//agarra la llave
        System.out.println("i got this: " + publicKey);
        
        //se comienza el thread para el servidor envíe los mensajes al mismo tiempo
        new Thread(clientServer).start();
        
        while(true){
            //inputKeyboard = buffKeyboard.readLine(); //lo que escribe el cliente
            do{
                Thread.sleep(200);
            }while(inputInter == "none");
            inputKeyboard = inputInter;
            //System.out.println();
            if(inputKeyboard.equals("exit")) break;//si quiere salir
            cipherText = rsa.Encriptar(inputKeyboard, publicKey);
            //cipherText = rsa.Encriptar(inputKeyboard);
            //LO QUE SE TIENE QUE ENCRIPTAR, LLAVE PRIVADA DEL CLIENTE
            pw.println(cipherText);
            pw.flush();
            inputInter = "none";
        }
        socketClient.close();
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JContinuar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField text_User;
    private javax.swing.JTextField text_getUserText;
    // End of variables declaration//GEN-END:variables
}
